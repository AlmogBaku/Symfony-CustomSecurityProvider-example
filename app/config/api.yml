# API Doc Configuration
nelmio_api_doc:
    sandbox:
        authentication:
            name: access_token
            delivery: query
    swagger:
        api_base_path:        /api
        swagger_version:      1.2
        model_naming_strategy: dot_notation
        api_version:          0.1
        info:
            title:                My API
            description:          TEST API
            TermsOfServiceUrl:    ~
            contact:              ~
            license:              ~
            licenseUrl:           ~


# REST Configuration
fos_rest:
    routing_loader:
        include_format: false
    view:
        view_response_listener: force
        failed_validation: HTTP_BAD_REQUEST
        formats:
            rss: false
            xml: true
            json: true
            html: true
        templating_formats:
            html: true
    access_denied_listener:
        json: true
    format_listener:
        rules:
            -
                # URL path info
                path:                 '^/'
                host:                 ~
                prefer_extension:     true
                fallback_format:      json
                priorities: [ 'json', 'xml', 'html','css', '*/*' ]
    body_listener:
        decoders:
            json: fos_rest.decoder.json
            xml: fos_rest.decoder.xml
    param_fetcher_listener: true
    allowed_methods_listener: true
    exception:
        messages:
            'Symfony\Component\HttpKernel\Exception\NotFoundHttpException': true
            'Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException': true
            'Symfony\Component\HttpKernel\Exception\BadRequestHttpException': true
            'Symfony\Component\Validator\Exception\BadMethodCallException': true

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations: true }


## Cross domain allowing
nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
    paths:
        '^(/api/)':
            allow_origin: ['*']
            allow_headers: ['origin', 'x-requested-with', 'content-type']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE', 'OPTIONS', 'HEAD']
            max_age: 3600


## OAuth2 Configuration
fos_oauth_server:
    db_driver: orm
    client_class:        AlmogBaku\ApiBundle\Entity\Client
    access_token_class:  AlmogBaku\ApiBundle\Entity\AccessToken
    refresh_token_class: AlmogBaku\ApiBundle\Entity\RefreshToken
    auth_code_class:     AlmogBaku\ApiBundle\Entity\AuthCode
    service:
        user_provider:   fos_user.user_manager
        options:
            # Changing tokens and authcode lifetime
            access_token_lifetime: 3456000 #40 days
            refresh_token_lifetime: 2678400 #31 days
            auth_code_lifetime: 30 #30 seconds